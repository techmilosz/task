// Code generated by MockGen. DO NOT EDIT.
// Source: calculator.go
//
// Generated by this command:
//
//	mockgen -source=calculator.go -destination=./mocks/packsGetAller.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPacksGetAller is a mock of PacksGetAller interface.
type MockPacksGetAller struct {
	ctrl     *gomock.Controller
	recorder *MockPacksGetAllerMockRecorder
}

// MockPacksGetAllerMockRecorder is the mock recorder for MockPacksGetAller.
type MockPacksGetAllerMockRecorder struct {
	mock *MockPacksGetAller
}

// NewMockPacksGetAller creates a new mock instance.
func NewMockPacksGetAller(ctrl *gomock.Controller) *MockPacksGetAller {
	mock := &MockPacksGetAller{ctrl: ctrl}
	mock.recorder = &MockPacksGetAllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPacksGetAller) EXPECT() *MockPacksGetAllerMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockPacksGetAller) GetAll() []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]int)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockPacksGetAllerMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPacksGetAller)(nil).GetAll))
}
